<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevDebugProjectContainerUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes;

    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
        if (null === self::$declaredRoutes) {
            self::$declaredRoutes = [
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_open_file' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:openAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/open',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_twig_error_test' => array (  0 =>   array (    0 => 'code',    1 => '_format',  ),  1 =>   array (    '_controller' => 'twig.controller.preview_error:previewErrorPageAction',    '_format' => 'html',  ),  2 =>   array (    'code' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'code',    ),    2 =>     array (      0 => 'text',      1 => '/_error',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'publication_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\PublicationController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/publication/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pub_demandeur' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\PublicationController::pubParDemandeurAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/publication/pub',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'publication_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\PublicationController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/publication/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'publication_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\PublicationController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/publication',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'add_publication' => array (  0 =>   array (    0 => 'id_prof',    1 => 'id_publication',  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\PublicationController::postulerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_publication',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_prof',    ),    2 =>     array (      0 => 'text',      1 => '/publication/addPublication',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pub_prof' => array (  0 =>   array (    0 => 'id_prof',  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\PublicationController::pubParMetierAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_prof',    ),    1 =>     array (      0 => 'text',      1 => '/publication/pubprof',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'update_pub' => array (  0 =>   array (    0 => 'id_pub',    1 => 'id_prof',  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\PublicationController::UpdatePublicationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_prof',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_pub',    ),    2 =>     array (      0 => 'text',      1 => '/publication/updatepub',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cloturer_pub' => array (  0 =>   array (    0 => 'id_pub',  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\PublicationController::cloturerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_pub',    ),    1 =>     array (      0 => 'text',      1 => '/publication/cloturer',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'portfolio_default_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'PortfolioBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'add_image' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'PortfolioBundle\\Controller\\DefaultController::addImageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/portfolio/addImage',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete_image' => array (  0 =>   array (    0 => 'id_image',  ),  1 =>   array (    '_controller' => 'PortfolioBundle\\Controller\\DefaultController::deleteIamge',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_image',    ),    1 =>     array (      0 => 'text',      1 => '/portfolio/deleteImage',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'update_image' => array (  0 =>   array (    0 => 'id_image',  ),  1 =>   array (    '_controller' => 'PortfolioBundle\\Controller\\DefaultController::updateImage',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_image',    ),    1 =>     array (      0 => 'text',      1 => '/portfolio/editImage',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'listimages' => array (  0 =>   array (    0 => 'id_prof',  ),  1 =>   array (    '_controller' => 'PortfolioBundle\\Controller\\DefaultController::getImagesPerProf',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_prof',    ),    1 =>     array (      0 => 'text',      1 => '/portfolio/getImages',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'createUserDepla' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'PortfolioBundle\\Controller\\DefaultController::showByUsernameByDep',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/getAlldeplacementByUser',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'add_metier' => array (  0 =>   array (    0 => 'id_prof',    1 => 'id_metier',  ),  1 =>   array (    '_controller' => 'PortfolioBundle\\Controller\\DefaultController::addMetierAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_metier',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_prof',    ),    2 =>     array (      0 => 'text',      1 => '/portfolio/addMetier',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'update_metier' => array (  0 =>   array (    0 => 'id_prof',  ),  1 =>   array (    '_controller' => 'PortfolioBundle\\Controller\\DefaultController::UpdateMetierAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_prof',    ),    1 =>     array (      0 => 'text',      1 => '/portfolio/Updatemetier',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete_metier' => array (  0 =>   array (    0 => 'id_prof',    1 => 'id_metier',  ),  1 =>   array (    '_controller' => 'PortfolioBundle\\Controller\\DefaultController::deleteMetier',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_metier',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_prof',    ),    2 =>     array (      0 => 'text',      1 => '/portfolio/deleteMetier',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'listMetier' => array (  0 =>   array (    0 => 'id_prof',  ),  1 =>   array (    '_controller' => 'PortfolioBundle\\Controller\\DefaultController::getMetierPerProf',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_prof',    ),    1 =>     array (      0 => 'text',      1 => '/portfolio/getMetier',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'add_deplacement' => array (  0 =>   array (    0 => 'id_prof',    1 => 'id_dep',  ),  1 =>   array (    '_controller' => 'PortfolioBundle\\Controller\\DefaultController::addDeplacementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_dep',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_prof',    ),    2 =>     array (      0 => 'text',      1 => '/portfolio/addDeplacement',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete_deplacement' => array (  0 =>   array (    0 => 'id_prof',    1 => 'id_dep',  ),  1 =>   array (    '_controller' => 'PortfolioBundle\\Controller\\DefaultController::deleteDeplacement',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_dep',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_prof',    ),    2 =>     array (      0 => 'text',      1 => '/portfolio/deleteDeplacement',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'update_deplacement' => array (  0 =>   array (    0 => 'id_prof',  ),  1 =>   array (    '_controller' => 'PortfolioBundle\\Controller\\DefaultController::UpdateDeplacementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_prof',    ),    1 =>     array (      0 => 'text',      1 => '/portfolio/UpdateDeplacement',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'listDeplacement' => array (  0 =>   array (    0 => 'id_prof',  ),  1 =>   array (    '_controller' => 'PortfolioBundle\\Controller\\DefaultController::getDeplamcementPerProf',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_prof',    ),    1 =>     array (      0 => 'text',      1 => '/portfolio/getDeplacement',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'messagerie_default_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MessagerieBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'msg' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MessagerieBundle\\Controller\\DefaultController::sendMessage',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/msg/sendMessage',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'listMessageByUser' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MessagerieBundle\\Controller\\DefaultController::getMessagesByUser',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/getMessagesByUser',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'evaluation_default_add' => array (  0 =>   array (    0 => 'idprof',  ),  1 =>   array (    '_controller' => 'EvaluationBundle\\Controller\\DefaultController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idprof',    ),    1 =>     array (      0 => 'text',      1 => '/feedback/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'evaluation_default_update' => array (  0 =>   array (    0 => 'idprof',  ),  1 =>   array (    '_controller' => 'EvaluationBundle\\Controller\\DefaultController::updateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idprof',    ),    1 =>     array (      0 => 'text',      1 => '/feedback/update',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'evaluation_default_deleteevaluation' => array (  0 =>   array (    0 => 'idprof',  ),  1 =>   array (    '_controller' => 'EvaluationBundle\\Controller\\DefaultController::deleteEvaluationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idprof',    ),    1 =>     array (      0 => 'text',      1 => '/feedback/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'evaluation_default_getfeedback' => array (  0 =>   array (    0 => 'idprof',  ),  1 =>   array (    '_controller' => 'EvaluationBundle\\Controller\\DefaultController::getFeedback',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idprof',    ),    1 =>     array (      0 => 'text',      1 => '/feedback/getfeedback',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reclamation_default_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'add_reclamation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\DefaultController::addReclamationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reclamation/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'find_all_reclamation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\DefaultController::findAll',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reclamation/findAll',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'find_by_user_reclamation' => array (  0 =>   array (    0 => 'user_id',  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\DefaultController::findReclamationByUser',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user_id',    ),    1 =>     array (      0 => 'text',      1 => '/reclamation/findByUser',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete_by_user_reclamation' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ReclamationBundle\\Controller\\DefaultController::deleteReclamationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/reclamation/deleteByRecId',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'createUseri' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\DefaultController::createUser',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'add_user' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\DefaultController::addUserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'update_user' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\DefaultController::updatePost',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete_post' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\DefaultController::deletePost',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'listAllUSER' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\DefaultController::getAllUser',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/getAllUsr',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'listAllUSR' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\DefaultController::getAllUserOrById',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/getAllUsr',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'createUser' => array (  0 =>   array (    0 => 'username',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\DefaultController::showByUsername',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'username',    ),    1 =>     array (      0 => 'text',      1 => '/getByUsername',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'listUserDept' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\DefaultController::getAllUserBydeplacemeny',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/getAllUsrByDep',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'listUserMett' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\DefaultController::getAllUserByMetier',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/getAllUsrByMet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'demandeur_by_id' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\DemandeurController::getArticleByidAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demandeur/byId',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'add_demandeur' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\DemandeurController::addArticleAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demandeur/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_demandeur_warri' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\DemandeurController::warriAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demandeur/warri',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'update_demandeur' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\DemandeurController::updatePost',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/demandeur/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'add_professionnel' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ProfessionnelController::addArticleAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/professionnel/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_login_check' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.security.controller:loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.security.controller:checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.security.controller:logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.profile.controller:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.profile.controller:editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:registerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:checkEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:confirmAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/register/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:confirmedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/confirmed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:requestAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/request',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:sendEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/send-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:checkEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:resetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/resetting/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.change_password.controller:changePasswordAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/change-password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    ];
        }
    }

    public function generate($name, $parameters = [], $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
